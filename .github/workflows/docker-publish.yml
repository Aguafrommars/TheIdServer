name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - '*'

  # Run tests for any PRs.
  pull_request:
    
env:
  # TODO: Change variable to your image's name.
  SERVER_IMAGE_NAME: aguacongastheidserver
  SERVER_DOCKER_FILE: src/Aguacongas.TheIdServer/Dockerfile
  APP_IMAGE_NAME: aguacongastheidserverblazorapp
  APP_DOCKER_FILE: src/Aguacongas.TheIdServer.BlazorApp/Dockerfile

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          docker build . --file $SERVER_DOCKER_FILE
          docker build . --file $APP_DOCKER_FILE

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Get latest version
        run: |
          curl -s "https://registry.hub.docker.com/v2/repositories/aguacongas/aguacongastheidserver/tags?page_size=1&page=1&ordering=-name" >> ./version.json
          latest=($(jq ".results[0].name" versions.json -r))
          echo "::set-output name=latestVersion::$latest"

      - name: Build image
        run: |
          docker build . --file $SERVER_DOCKER_FILE --tag $SERVER_IMAGE_NAME
          docker build . --file $APP_DOCKER_FILE --tag $APP_IMAGE_NAME

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.DOCKER_HUB_PAT }}" | docker login -u aguacongas --password-stdin
          
      - name: Push image to GitHub Container Registry
        env:
          LATEST_VERSION: ${{ steps.latest-version.outputs.latestVersion }}
        run: |
          SERVER_IMAGE_ID=aguacongas/$SERVER_IMAGE_NAME
          APP_IMAGE_ID=aguacongas/$APP_IMAGE_NAME

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `unstable` tag convention
          [ "$VERSION" == "master" ] && VERSION=unstable                  

          echo SERVER_IMAGE_ID=$SERVER_IMAGE_ID
          echo APP_IMAGE_ID=$APP_IMAGE_ID
          echo VERSION=$VERSION
          echo LATEST_VERSION=$LATEST_VERSION
          
          versions=($(echo $VERSION $LATEST_VERSION | tr ' ' "\n" | sort --version-sort))
          echo sorted versions 1st item=${versions[0]}
 
          docker tag $SERVER_IMAGE_NAME $SERVER_IMAGE_ID:$VERSION
          docker tag $APP_IMAGE_NAME $APP_IMAGE_ID:$VERSION
          docker tag $SERVER_IMAGE_NAME $SERVER_IMAGE_ID:latest
          docker push $SERVER_IMAGE_ID:$VERSION
          docker push $APP_IMAGE_ID:$VERSION

          if [ "$VERSION" != "${versions[0]}" ]; then exit; fi
          
          docker tag $SERVER_IMAGE_NAME $SERVER_IMAGE_ID:latest
          docker tag $APP_IMAGE_NAME $APP_IMAGE_ID:latest
          docker push $SERVER_IMAGE_ID:latest
          docker push $APP_IMAGE_ID:latest
          
          
