name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - '*'

  # Run tests for any PRs.
  pull_request:
    
env:
  # TODO: Change variable to your image's name.
  SERVER_IMAGE_NAME: theidserver
  SERVER_DOCKER_FILE: src/Aguacongas.TheIdServer/Dockerfile
  APP_IMAGE_NAME: theidserverapp
  APP_DOCKER_FILE: src/Aguacongas.TheIdServer.BlazorApp/Dockerfile

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          docker build . --file $SERVER_DOCKER_FILE
          docker build . --file $APP_DOCKER_FILE

  latest-version:
    needs: test
    runs-on: windows-latest
    if: github.event_name == 'push'
    steps:
      - name: Get latest version
        run: |
          $j = Invoke-WebRequest 'https://registry.hub.docker.com/v2/repositories/aguacongas/aguacongastheidserver/tags?page_size=1&page=1&ordering=-name' | ConvertFrom-Json
          $latest = $j.results[0].name
          echo "::set-env name=latest-verion::$latest"

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: latest-version

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: |
          docker build . --file $DOCKER_FILE --tag $SERVER_IMAGE_NAME
          docker build . --file $DOCKER_FILE --tag $APP_IMAGE_NAME

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.DOCKER_HUB_PAT }}" | docker login https://hub.docker.com -u aguacongas --password-stdin

      - name: Push image to GitHub Container Registry
        env:
          LATEST_VESION: ${{ env.latest-verion }}
          run: |
            SERVER_IMAGE_ID=aguacongas/$SERVER_IMAGE_NAME
            APP_IMAGE_ID=aguacongas/$APP_IMAGE_NAME

            # Strip git ref prefix from version
            VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

            # Strip "v" prefix from tag name
            [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

            # Use Docker `unstable` tag convention
            [ "$VERSION" == "master" ] && VERSION=unstable                  

            echo SERVER_IMAGE_ID=$SERVER_IMAGE_ID
            echo APP_IMAGE_ID=$APP_IMAGE_ID
            echo VERSION=$VERSION

            docker tag $SERVER_IMAGE_NAME $SERVER_IMAGE_ID:$VERSION
            docker tag $APP_IMAGE_NAME $APP_IMAGE_ID:$VERSION
            [ "$VERSION" == "$LATEST_VESION" ] && docker tag $SERVER_IMAGE_NAME $SERVER_IMAGE_ID:latest
            [ "$VERSION" == "$LATEST_VESION" ] && docker tag $APP_IMAGE_NAME $APP_IMAGE_ID:latest                  
            docker push $SERVER_IMAGE_ID:$VERSION
            docker push $APP_IMAGE_ID:$VERSION
            [ "$VERSION" == "$LATEST_VESION" ] && docker push $SERVER_IMAGE_ID:latest
            [ "$VERSION" == "$LATEST_VESION" ] && docker push $APP_IMAGE_ID:latest                  
