@using  Aguacongas.IdentityServer.Store
@inherits AutoCompleteModel<Entity.ClientScope>
@inject IAdminStore<Entity.IdentityResource> _identityStore
@inject IAdminStore<Entity.ProtectResource> _apiStore
@inject IAdminStore<Entity.ApiScope> _apiScopeStore

@if (IsReadOnly)
{
    <div class="input-group input-group-sm mb-3">
        <div class="form-control @FieldClass" disabled>@Entity.Scope</div>
        <div class="input-group-append select" @onclick="() => DeleteClicked.InvokeAsync(null)">
            <span class="input-group-text oi oi-trash" />
        </div>
    </div>
}
else
{
    <div id="@Id" @key="@Entity" class="input-group input-group-sm mb-3" data-toggle="dropdown">
        <input type="text" class="form-control new-claim" placeholder="@Localizer["scope"]" value="@CurrentValue"
               @oninput="OnInputChanged" @onfocus="Filter" />
        <div class="input-group-append" @onclick="() => SetSelectedValue(CurrentValue)">
            <span class="input-group-text oi oi-plus" />
        </div>
    </div>
    <div class="dropdown-menu m-0">
        @if (_filterScopes != null)
        {
            foreach (var scope in _filterScopes)
            {
                <button class="dropdown-item m-0 p-0 pl-1 pr-1" type="button" @onclick="() => SetSelectedValue(scope.Value)">
                    <small>@scope.Value</small>
                    @if (scope.IsIdentity)
                    {
                        <small class="text-muted">@Localizer["identity"]</small>
                    }
                    else
                    {
                        <small class="text-muted">
                            @Localizer["api"]
                        </small>
                    }
                    <div class="text-muted font-italic">
                        <small>@scope.Description</small>
                    </div>
                </button>
            }
        }
    </div>
}
