// <auto-generated />
using System;
using Aguacongas.IdentityServer.EntityFramework.Store;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Aguacongas.TheIdServer.Oracle.Migrations.OperationalDb
{
    [DbContext(typeof(OperationalDbContext))]
    [Migration("20230328205635_Saml2P")]
    partial class Saml2P
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Aguacongas.IdentityServer.KeysRotation.EntityFrameworkCore.KeyRotationKey", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<string>("FriendlyName")
                    .HasColumnType("longtext");

                b.Property<string>("Xml")
                    .HasColumnType("longtext");

                b.HasKey("Id");

                b.ToTable("KeyRotationKeys");
            });

            modelBuilder.Entity("Aguacongas.IdentityServer.Store.Entity.AuthorizationCode", b =>
            {
                b.Property<string>("Id")
                    .HasColumnType("varchar(255)");

                b.Property<string>("ClientId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime(6)");

                b.Property<string>("Data")
                    .HasColumnType("longtext");

                b.Property<DateTime?>("Expiration")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("ModifiedAt")
                    .HasColumnType("datetime(6)");

                b.Property<string>("SessionId")
                    .HasColumnType("longtext");

                b.Property<string>("UserId")
                    .HasMaxLength(200)
                    .HasColumnType("varchar(200)");

                b.HasKey("Id");

                b.ToTable("AuthorizationCodes");
            });

            modelBuilder.Entity("Aguacongas.IdentityServer.Store.Entity.BackChannelAuthenticationRequest", b =>
            {
                b.Property<string>("Id")
                    .HasColumnType("varchar(255)");

                b.Property<string>("ClientId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime(6)");

                b.Property<string>("Data")
                    .HasColumnType("longtext");

                b.Property<DateTime?>("Expiration")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("ModifiedAt")
                    .HasColumnType("datetime(6)");

                b.Property<string>("SessionId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("UserId")
                    .HasMaxLength(200)
                    .HasColumnType("varchar(200)");

                b.HasKey("Id");

                b.ToTable("BackChannelAuthenticationRequests");
            });

            modelBuilder.Entity("Aguacongas.IdentityServer.Store.Entity.DeviceCode", b =>
            {
                b.Property<string>("Id")
                    .HasColumnType("varchar(255)");

                b.Property<string>("ClientId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<string>("Code")
                    .HasMaxLength(200)
                    .HasColumnType("varchar(200)");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime(6)");

                b.Property<string>("Data")
                    .HasColumnType("longtext");

                b.Property<string>("Description")
                    .HasMaxLength(200)
                    .HasColumnType("varchar(200)");

                b.Property<DateTime>("Expiration")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("ModifiedAt")
                    .HasColumnType("datetime(6)");

                b.Property<string>("SessionId")
                    .HasMaxLength(100)
                    .HasColumnType("varchar(100)");

                b.Property<string>("SubjectId")
                    .HasMaxLength(200)
                    .HasColumnType("varchar(200)");

                b.Property<string>("UserCode")
                    .HasMaxLength(200)
                    .HasColumnType("varchar(200)");

                b.HasKey("Id");

                b.ToTable("DeviceCodes");
            });

            modelBuilder.Entity("Aguacongas.IdentityServer.Store.Entity.OneTimeToken", b =>
            {
                b.Property<string>("Id")
                    .HasColumnType("varchar(255)");

                b.Property<string>("ClientId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime(6)");

                b.Property<string>("Data")
                    .HasColumnType("longtext");

                b.Property<DateTime?>("Expiration")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("ModifiedAt")
                    .HasColumnType("datetime(6)");

                b.Property<string>("SessionId")
                    .HasColumnType("longtext");

                b.Property<string>("UserId")
                    .HasMaxLength(200)
                    .HasColumnType("varchar(200)");

                b.HasKey("Id");

                b.ToTable("OneTimeTokens");
            });

            modelBuilder.Entity("Aguacongas.IdentityServer.Store.Entity.ReferenceToken", b =>
            {
                b.Property<string>("Id")
                    .HasColumnType("varchar(255)");

                b.Property<string>("ClientId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime(6)");

                b.Property<string>("Data")
                    .HasColumnType("longtext");

                b.Property<DateTime?>("Expiration")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("ModifiedAt")
                    .HasColumnType("datetime(6)");

                b.Property<string>("SessionId")
                    .HasColumnType("longtext");

                b.Property<string>("UserId")
                    .HasMaxLength(200)
                    .HasColumnType("varchar(200)");

                b.HasKey("Id");

                b.ToTable("ReferenceTokens");
            });

            modelBuilder.Entity("Aguacongas.IdentityServer.Store.Entity.RefreshToken", b =>
            {
                b.Property<string>("Id")
                    .HasColumnType("varchar(255)");

                b.Property<string>("ClientId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime(6)");

                b.Property<string>("Data")
                    .HasColumnType("longtext");

                b.Property<DateTime?>("Expiration")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("ModifiedAt")
                    .HasColumnType("datetime(6)");

                b.Property<string>("SessionId")
                    .HasColumnType("longtext");

                b.Property<string>("UserId")
                    .HasMaxLength(200)
                    .HasColumnType("varchar(200)");

                b.HasKey("Id");

                b.ToTable("RefreshTokens");
            });

            modelBuilder.Entity("Aguacongas.IdentityServer.Store.Entity.Saml2pArtifact", b =>
             {
                 b.Property<string>("Id")
                     .HasColumnType("nvarchar2(450)");

                 b.Property<string>("ClientId")
                     .IsRequired()
                     .HasColumnType("nclob");

                 b.Property<string>("UserId")
                     .HasColumnType("varchar(200)");

                 b.Property<string>("Xml")
                     .HasColumnType("nclob");

                 b.Property<string>("SessionId")
                     .HasColumnType("nclob");

                 b.Property<DateTime>("CreatedAt")
                    .IsRequired()
                    .HasColumnType("timestamp");

                 b.HasKey("Id");

                 b.ToTable("Saml2pArtifact");
             });

            modelBuilder.Entity("Aguacongas.IdentityServer.Store.Entity.UserConsent", b =>
            {
                b.Property<string>("Id")
                    .HasColumnType("varchar(255)");

                b.Property<string>("ClientId")
                    .IsRequired()
                    .HasColumnType("longtext");

                b.Property<DateTime>("CreatedAt")
                    .HasColumnType("datetime(6)");

                b.Property<string>("Data")
                    .HasColumnType("longtext");

                b.Property<DateTime?>("Expiration")
                    .HasColumnType("datetime(6)");

                b.Property<DateTime?>("ModifiedAt")
                    .HasColumnType("datetime(6)");

                b.Property<string>("SessionId")
                    .HasColumnType("longtext");

                b.Property<string>("UserId")
                    .IsRequired()
                    .HasMaxLength(200)
                    .HasColumnType("varchar(200)");

                b.HasKey("Id");

                b.ToTable("UserConstents");
            });

            modelBuilder.Entity("Microsoft.AspNetCore.DataProtection.EntityFrameworkCore.DataProtectionKey", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                b.Property<string>("FriendlyName")
                    .HasColumnType("longtext");

                b.Property<string>("Xml")
                    .HasColumnType("longtext");

                b.HasKey("Id");

                b.ToTable("DataProtectionKeys");
            });

            modelBuilder.Entity("Aguacongas.IdentityServer.Store.Entity.UserSession", b =>
                {
                    b.HasOne("Aguacongas.IdentityServer.Store.Entity.User", "User")
                        .WithMany("UserSessions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
